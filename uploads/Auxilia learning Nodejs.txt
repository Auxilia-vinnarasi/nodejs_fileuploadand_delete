MONGODB_URL=mongodb+srv://john:john123@cluster0.bg8rf.mongodb.net/nodejs_auth?retryWrites=true&w=majority
OR
mongodb://localhost:27017/ecom_test
????????????????????????????????????????????????????????????????
npm init -y
npm install express mongoose dotenv 
npm install nodemon --save -dev

server.js
const mongoose=require("mongoose");
require("dotenv/config");
const app=require("./app");

mongoose.connect(process.env.MONGODB_URI,{
            useNewUrlParser:true,
            useUnifiedTopology:true,
})
.then(()=>console.log("Mongodb connected successfully.."))
.catch(()=>console.log("MongoDb not connected successfully..."))

const PORT=process.env.PORT || 3000;

app.listen(PORT,()=>{
    console.log(`App is listening on port ${PORT}`);
});

app.js
const express=require("express");
const cors=require("cors");
const bodyParser=require("body-parser");
const cookieParser=require("cookie-parser")
const app=express();

const userRouter=require("./Routers/userRouter");
const productRouter=require("./Routers/productRouter");
const categoryRouter=require("./Routers/categoryRouter");
const cartRouter=require("./Routers/cartRouter");
const orderRouter=require("./Routers/orderRouter");
//const cartRouter=require("./Routers/cartRouter");
//const itemRouter=require("./Routers/itemRouter");

//middleware
app.use(express.json());
app.use(cors("corsOptions"));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({extended:true}));
app.use(cookieParser());

//we have to set the endpoints so that any req coming with 
//the url/api this can be send to this user,product,category,cart, order route.
app.use("/api/user",userRouter);
app.use("/api/product",productRouter);
app.use("/api/category",categoryRouter);
app.use("/api/cart",cartRouter);
app.use("/api/order",orderRouter);

app.get("/",(req,res)=>{
    res.send("E-commerce website creation in backend...")
});
module.exports=app;

Routers=>cartRouter.js
const router=require("express").Router();
//router or routing: it refers to how the applications endpoint refers to client request.
const cartController=require("../controllers/cartController");

router.post("/create_cart",cartController.createCart);
router.put("/updatecart/:id",cartController.updateCart);
router.get("/getallprod",cartController.getAllProd);
router.delete("/deletecart/:id",cartController.deleteCart);
router.get("/getusercart/:userId",cartController.getUserCart);

module.exports=router;
???????????????????????????????????????????????????????????????????????
server.js

require("dotenv").config({path:"./config.env"})

const express=require("express");
const connectDB=require("./config/db");

//connect DB
connectDB();

const app=express();

//this is the middleware which is allows us to get the data from the body (ie) req.body
app.use(express.json());

app.use("/api/auth",require("./routes/auth"));

const PORT=process.env.PORT || 5000;

//get request for checking server
app.get("/",(req,res)=>{
    res.send("App is working ....")
})

 const server=app.listen(PORT,()=>{
    console.log(`App is listening on port ${PORT}`);
})

//for nicely done error im creating this
process.on("unhandledRejection",(err,promise)=>{
    console.log(`Logged Error:${err}`);
    server.close(()=>process.exit(1));
})

routes=>auth.js
const express=require("express");
const router=express.Router();

const {register, login, forgotPassword, resetPassword}=require("../controllers/auth");

router.route("/register").post(register);

//router.post("/register",)
router.route("/login").post(login);

router.route("/forgotpassword").post(forgotPassword);

router.route("/resetpassword/:resetToken").put(resetPassword);

module.exports=router;
???????????????????????????????????????????????????????????????????
JWT - random digits for secrets:
in node cmd we have to run below commands
require("crypto").randomBytes(35).toString("hex")//because its gonna written buffer so that toString
adadaodkoweirgdmsdmg4535232323121290sdlskdlsk;dl;
????????????????????????????????????????????????????????????????????
Pushing Git commands
Go to that project page and write click git bash 
1>$git init
2>git add .
3>git status
4>git commit -m "first commit"
5>gir remote add origin https://github.com/
6>git push -u origin master
Then it is created
if it's remote origin already exits: ERROR
1>git remote --verbose
2>git remote set-url origin http://
3>git remote --verbose
4>git add .
5>git commit -m "first commit"
6>git push origin master
if we give git add . =>warning=>It will be replaced by CRLF in the file
solution==>git config core.autocrlf true
????????????????????????????????????????????????????????????????????????????
mongodb Dump:
download:https://www.mongodb.com/try/download/database-tools?tck=docs_databasetools
cmd:==>1>set path="C:\Program Files\MongoDB\Server\6.0\bin"
==>2>mongodump
mongodump --uri=mongodb+srv://xxx:yyy@cluster0-whatever.mongodb.net
?????????????????????????????????????????????????????????????????????????????
javascript functions:
array.map() is returning elements all together in React JS
const Test=()=>{
const array=["Hello","Mynameis"]
return (<>
{
array.map((arr)=>{
return( <>
<div>{arr}</div>
<buttn>Edit</div>
</>
)
})
}
</>
)
}
??????????????????????????????????????????????????????
function App() {
  const array = ['hello', 'myNameIs'];
  return array.map(item => (
    <div key={item}>
      {item} <button>Edit</button>
    </div>
  ));
}

ReactDOM.render(<App />, document.getElementById("root"));
??????????????????????????????????????????????????????
Purpose of Middlewares:
The main purpose of the middleware is to modify the req and res objects,
and then compile and execute any code that is required. 
???????????????????????????????????????????????????????
for(i=1;i<=100;i++){
   if(i%3 && i%5){
       console.log(i);
   }
   else{
       if(i%3==0){
           console.log(i,"three");
       }
       if(i%5==0){
           console.log(i,"five");
       }
   }
}
?????????????????????????????????????????????????????






















